---
# number of images per split:
splits:
 train: 1
 valid: 1
 test: 1

output_dir: dataset

labels_seg_dir: labels # dummy string for code substitution
labels_det_dir: labels_det # dummy string for code substitution

category_names_file: ./dataset/class.names
test_output_dir: ./runs/exp

image_dir: ./dataset/images/{split}/
###########################################################################
# various output formats selection:
#  1. coco like labels format. Dataset entries are defined by a json file:
coco_detection_dataset_labels_path: ./dataset/images/{split}/annotations.json

# 2. class-bbox labels. Format: a .txt file per image, one row per object
# row format:
# [classid, x_center, y_center, width, height]. Mormalized coordinates [0 to 1]. zero-based indexed class numbers.
#
detection_label_text_files_path: ./dataset/detection_labels/{split}

# 3. class-bbox labels text file per all images, a row per image:
detection_label_unified_file_path: ./dataset/{split}/all_entries.txt

# 4. class-polygon labels  Format:  a .txt file per image, one row per object,
#    row format: class polygon vertices (x0, y0.....xn,yn), normalized coordinates [0 to 1].
# zero-indexed class numbers - start from 0
segmentation_label_files_path: ./dataset/labels/{split}
###########################################################################
# shape dataset definitions:
shapes_config_file: ./config/shapes_config.yaml

# validate dataset by rendering : number of radomly selected images examples to render - per a split:
nrender_examples: 1
